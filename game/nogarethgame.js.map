{"version":3,"sources":["game/nogarethgame.ts"],"names":[],"mappings":";;AAMA,IAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,UAAA,UAAA,SAAA,QAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAmBgB,SAAA,EAAA,EAA+B,GAAgC,EAAA,KAAA,GAf3E,KAAA,KAAe,GACf,KAAA,KAAe,GAGf,KAAA,aAAuB,EAMvB,KAAA,UAAY,EACZ,KAAA,UAAY,EACZ,KAAA,UAAW,EACX,KAAA,WAAY,EAuXZ,KAAA,WAAY,EApXH,KAAA,IAAM,EACN,KAAA,gBAAkB,EAClB,KAAA,UAAY,EAAA,SAAS,OAG1B,EAAA,UAAU,GACV,EAAA,QAAQ,MACR,EAAA,mBAAmB,KAAK,iBAEnB,KAAA,UAAY,EAAA,UAAU,UAAU,WA7B7C,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,UAiC8B,MAAA,WAAlB,IAAA,EAAa,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GACZ,KAAA,UAAY,EAAA,UAAU,UAAU,aACjC,IAAA,EAAY,IAAI,EAAA,OAAO,EAAA,UAAU,OAAQ,EAAA,UAAU,OAAQ,KAAK,UAAW,MAC3E,IACA,EAAU,UAAY,EAAA,OAAO,UAC7B,EAAU,WAAa,EAAA,OAAO,WAC9B,EAAU,YAAc,EAAA,OAAO,aAEnC,EAAA,UAAU,GACL,KAAA,UAAW,EACX,KAAA,WAAW,2BA3CxB,CAAA,IAAA,cA8Ce,MAAA,WACF,KAAA,IAAI,UAAY,UAChB,KAAA,IAAI,SAAS,EAAG,EAAG,KAAK,IAAI,OAAO,MAAO,KAAK,IAAI,OAAO,UAhDvE,CAAA,IAAA,YAmDa,MAAA,WACA,KAAA,gBAAgB,SAEU,KAA3B,EAAA,gBAAgB,WAEhB,SAAS,SAEkB,UAA3B,EAAA,gBAAgB,YAEX,KAAA,iBACA,KAAA,UAAU,EAAA,UAAU,UAAU,YAEnC,KAAK,WAAa,EAAA,UAAU,UAAU,YACtC,KAAK,aAEL,KAAK,WAAa,EAAA,UAAU,UAAU,aACzC,KAAK,cAEF,KAAK,WAAa,EAAA,UAAU,UAAU,WACtC,KAAK,YAEL,KAAK,WAAa,EAAA,UAAU,UAAU,YACtC,KAAK,aAEL,KAAK,WAAa,EAAA,UAAU,UAAU,cACtC,KAAK,eAEL,KAAK,WAAa,EAAA,UAAU,UAAU,UACtC,KAAK,WAEL,KAAK,WAAa,EAAA,UAAU,UAAU,WACtC,KAAK,YAEL,KAAK,WAAa,EAAA,UAAU,UAAU,eACtC,KAAK,kBArFjB,CAAA,IAAA,eAwFgB,MAAA,WAGJ,GAFC,KAAA,cAED,KAAK,UAAY,EAAA,OAAO,OAAO,EAAA,UAAU,WAAW,UAAY,EAAA,OAAO,MAIvE,OAFK,KAAA,UAAU,EAAA,UAAU,UAAU,cACnC,EAAA,OAAO,YAAY,GAGnB,IAAC,EAAA,OAAO,OAAS,EAAA,OAAO,QAAQ,EAIhC,OAFK,KAAA,UAAY,EAAA,UAAU,UAAU,eACrC,EAAA,OAAO,YAAY,GAIQ,KAA3B,EAAA,gBAAgB,YAEX,KAAA,UAAY,EAAA,UAAU,UAAU,aAKpC,IAAA,IAAI,EAAI,EAAG,EAAI,KAAK,aAAa,MAAO,IACpC,IAAA,IAAI,EAAI,EAAG,EAAI,KAAK,aAAa,OAAQ,IACrC,KAAA,aAAa,YAAY,GAAG,GAAG,SAI5C,EAAA,OAAO,SACP,EAAA,OAAO,OAIF,KAAA,aAAa,gBACb,KAAA,aAAa,cAGb,KAAA,aAAa,gBACb,KAAA,aAAa,cAGb,KAAA,aAAa,mBACb,KAAA,aAAa,kBAGb,KAAA,aACA,KAAA,aAAa,cACb,KAAA,aAAa,cAClB,EAAA,OAAO,OAKe,GAAlB,KAAK,WACL,EAAA,OAAO,WAAW,EAAA,SAAS,iBAI1B,KAAA,eAEA,KAAA,cArJb,CAAA,IAAA,aAyJc,MAAA,WACF,IAAA,EACA,EACJ,EAAQ,KAAK,OAAO,EAAA,OAAO,EAAK,EAAA,OAAO,EAAI,IAAK,IAAI,EACpD,EAAQ,KAAK,OAAO,EAAA,OAAO,EAAK,EAAA,OAAO,EAAI,IAAK,IAAI,EAEhD,EAAM,IACN,EAAM,GACN,EAAM,KAAK,aAAa,MAAM,KAC9B,EAAQ,KAAK,aAAa,MAAM,IAChC,EAAM,IACN,EAAM,GACN,EAAM,KAAK,aAAa,OAAO,KAC/B,EAAQ,KAAK,aAAa,OAAO,IAEhC,IAAA,IAAI,EAAI,EAAM,EAAE,EAAM,GAAG,IAErB,IAAA,IAAI,EAAI,EAAM,EAAE,EAAM,GAAG,IAErB,KAAA,aAAa,YAAY,GAAG,GAAG,SA5KpD,CAAA,IAAA,iBAiLkB,MAAA,WACL,IAAA,IAAI,EAAI,EAAG,EAAI,KAAK,aAAa,MAAO,IACpC,IAAA,IAAI,EAAI,EAAG,EAAI,KAAK,aAAa,OAAQ,IACrC,KAAA,aAAa,YAAY,GAAG,GAAG,SApLpD,CAAA,IAAA,gBA0LkB,MAAA,SAAA,GACV,EAAA,OAAO,YAAY,GACd,KAAA,UAAY,EAAA,UAAU,UAAU,cAChC,KAAA,YAAc,IA7L3B,CAAA,IAAA,YAgMa,MAAA,WAEL,EAAA,SAAS,WAAW,EAAI,IACxB,EAAA,SAAS,WAAW,EAAI,GACxB,EAAA,OAAO,WAAW,EAAA,SAAS,YACvB,EAAA,OAAO,YAEP,EAAA,SAAS,UAAU,WAAW,EAC9B,EAAA,SAAS,UAAU,EAAI,IACvB,EAAA,SAAS,UAAU,EAAI,GACvB,EAAA,OAAO,WAAW,EAAA,SAAS,YAE3B,EAAA,OAAO,cAEP,EAAA,SAAS,UAAU,WAAW,EAC9B,EAAA,SAAS,UAAU,EAAI,IACvB,EAAA,SAAS,UAAU,EAAI,GACvB,EAAA,OAAO,WAAW,EAAA,SAAS,YAE3B,EAAA,OAAO,aAEP,EAAA,SAAS,UAAU,WAAW,EAC9B,EAAA,SAAS,UAAU,EAAI,IACvB,EAAA,SAAS,UAAU,EAAI,GACvB,EAAA,OAAO,WAAW,EAAA,SAAS,cAxNvC,CAAA,IAAA,aA4Ne,MAAA,SAAA,GACF,KAAA,UAAY,IA7NzB,CAAA,IAAA,iBAgOkB,MAAA,WACV,EAAA,OAAO,gBAjOf,CAAA,IAAA,aAoOc,MAAA,WAEF,EAAA,gBAAgB,UACX,KAAA,WAGsB,KAA3B,EAAA,gBAAgB,YACX,KAAA,UAAU,EAAA,UAAU,UAAU,WAER,KAA3B,EAAA,gBAAgB,YACX,KAAA,UAAU,EAAA,UAAU,UAAU,YAGvC,EAAA,SAAS,YAAY,WAAW,EAChC,EAAA,OAAO,WAAW,EAAA,SAAS,gBAlPnC,CAAA,IAAA,aAqPc,MAAA,WAEN,EAAA,SAAS,YAAY,WAAW,EAChC,EAAA,OAAO,WAAW,EAAA,SAAS,eAxPnC,CAAA,IAAA,YA2Pa,MAAA,WAEL,EAAA,SAAS,YAAY,WAAW,EAChC,EAAA,OAAO,WAAW,EAAA,SAAS,eA9PnC,CAAA,IAAA,cAiQe,MAAA,WACH,EAAA,gBAAgB,UACX,KAAA,UAAU,EAAA,UAAU,UAAU,cAIvC,EAAA,SAAS,YAAY,WAAW,EAChC,EAAA,OAAO,WAAW,EAAA,SAAS,gBAxQnC,CAAA,IAAA,gBA2QiB,MAAA,WACJ,KAAA,UAAW,EAChB,QAAQ,IAAI,eA7QpB,CAAA,IAAA,YAgRa,MAAA,WACL,EAAA,SAAS,YAAY,WAAW,EAChC,EAAA,OAAO,WAAW,EAAA,SAAS,aAEvB,EAAA,gBAAgB,WACX,KAAA,SAAQ,KArRzB,CAAA,IAAA,WA0RY,MAAA,WACJ,EAAA,SAAS,YAAY,WAAW,EAChC,EAAA,OAAO,WAAW,EAAA,SAAS,aAEvB,EAAA,gBAAgB,WACX,KAAA,YA/RjB,CAAA,IAAA,gBAoSiB,MAAA,WAEL,GAAA,EAAA,gBAAgB,UACX,KAAA,UAAY,EAAA,UAAU,UAAU,iBADrC,CAMC,KAAA,aACA,KAAA,aAAa,cACb,KAAA,aAAa,cAClB,EAAA,OAAO,OAEe,GAAlB,KAAK,WACL,EAAA,OAAO,WAAW,EAAA,SAAS,iBAK3B,IAGA,EAAE,EAAE,EAHJ,EAAQ,EAAA,OAAO,IAAI,IAAI,IAAI,KAC3B,EAAY,EAAA,OAAO,IAAI,IAAK,IAAK,KAKrC,EAAI,GAEK,IAEL,IAEA,GAPJ,EAAI,MAEJ,EAAQ,EAAA,UAAU,YAAc,KAKV,EAQtB,EAAA,OAAO,YAAY,EAAE,EAAE,EAAE,EAAM,EAAE,GACjC,EAAA,OAAO,YAAY,EAAE,EAAE,EAAE,IAAS,GAClC,EAAA,OAAO,YAAY,EAAE,EAAM,EAAE,EAAE,EAAM,IAAS,GAC9C,EAAA,OAAO,YAAY,EAAE,IAAS,EAAE,EAAM,IAAS,GAG1C,IAAA,IAAI,EAAE,IAAK,EAAE,EAAE,EAAO,IAClB,IAAA,IAAI,EAAE,GAAK,EAAE,IAAU,KACnB,EAAI,GAAI,GAAG,GACZ,EAAA,OAAO,aAAa,EAAG,EA3BnB,QA+BhB,EAAA,OAAO,SAAS,KAAK,YAAa,IAAgB,GAAgB,EAjBpD,GANH,IAKM,GAkBqF,GAEzG,EAAA,OAAO,SAAS,0BAA2B,IAAY,IAAY,EAnBlD,GANH,IAKM,GAoBmF,YA1V5G,CAAA,IAAA,eA8VgB,MAAA,WAEV,IACA,EAAE,EADF,EAAQ,QAEZ,EAAI,IACJ,EAAI,GAGJ,EAAA,OAAO,YAAY,EAAE,EAAE,IAAQ,EAAE,GACjC,EAAA,OAAO,YAAY,EAAE,EAAE,EAAE,GAAS,GAClC,EAAA,OAAO,YAAY,IAAQ,EAAE,IAAQ,GAAS,GAC9C,EAAA,OAAO,YAAY,EAAE,GAAS,IAAQ,GAAS,GAE/C,EAAA,SAAS,YAAY,EAAI,GACzB,EAAA,SAAS,YAAY,EAAI,GACzB,EAAA,OAAO,WAAW,EAAA,SAAS,aACvB,IAAA,EAAS,KAAK,aAAa,OAAO,OAClC,EAAM,MACT,EAAQ,KACJ,IAAA,IAAI,EAAI,EAAE,EAAE,EAAM,IAEb,EAAQ,EAAA,OAAO,IAAI,EAAE,IAAI,EAAE,GAAG,GACvC,EAAA,OAAO,YAAY,IAAI,EAAE,GAAI,IAAI,EAAE,GAAW,KApXjD,CAAA,IAAA,aAyXe,MAAA,SAAA,GACF,KAAA,WAAY,EACG,KAAhB,EAAU,IAA6B,KAAhB,EAAU,KACjC,KAAK,aAAe,IAAI,EAAA,MAAM,EAAA,KAAK,OAAO,UAAW,EAAA,SAAS,iBAC1D,EAAA,SAAS,UAAW,EAAA,UAAU,WAAY,EAAA,SAC9B,KAAhB,EAAU,IAA6B,KAAhB,EAAU,KACjC,KAAK,aAAe,IAAI,EAAA,MAAM,EAAA,KAAK,OAAO,UAAW,EAAA,SAAS,iBAC1D,EAAA,SAAS,UAAW,EAAA,UAAU,WAAY,EAAA,SAC9B,KAAhB,EAAU,IAA6B,KAAhB,EAAU,KACjC,KAAK,aAAe,IAAI,EAAA,MAAM,EAAA,KAAK,OAAO,UAAW,EAAA,SAAS,iBAC1D,EAAA,SAAS,UAAW,EAAA,UAAU,WAAY,EAAA,SAE7C,KAAA,UAAY,EAAA,UAAU,UAAU,iBArY7C,EAAA,GAAA,EAAA,aAAA","file":"nogarethgame.js","sourceRoot":"..","sourcesContent":["import { InputController } from \"./input_controller\";\r\nimport { DATA, ALL_BOBS, setCanvas, setPlayer, PLAYER, CONSTANTS, setGame, setInputController, INPUTCONTROLLER } from \"./data\";\r\nimport { BOB, BOBAPI } from \"./bob\";\r\nimport { Level } from \"./level\";\r\nimport { Player } from \"./player\";\r\n\r\nexport class NoGarethGame {\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    inputController: InputController;\r\n    boxX: number = 50;\r\n    boxY: number = 50;\r\n    garethBob: BOB;\r\n\r\n    currentFrame: number = 0;\r\n    textBoxText: string;\r\n    currentLevel: Level; //renamed this from level to testLevel, its what the original used, we can update after\r\n    nextLevel: string;\r\n\r\n\r\n    backColor = 0; //color with which screen is cleared\r\n    gameState = 0; //general state the game is in\r\n    win_game = false;\r\n    lights_on = true;\r\n\r\n    constructor(ctx: CanvasRenderingContext2D, inputController: InputController) {\r\n        this.ctx = ctx;\r\n        this.inputController = inputController;\r\n        this.garethBob = ALL_BOBS.Gareth;\r\n\r\n\r\n        setCanvas(ctx);\r\n        setGame(this);\r\n        setInputController(this.inputController);\r\n\r\n        this.gameState = CONSTANTS.GameState.GAME_INTRO;\r\n\r\n    }\r\n\r\n    newGame(continueGame=false) {\r\n        this.gameState = CONSTANTS.GameState.GAME_RUNNING;\r\n        var newPlayer = new Player(CONSTANTS.StartX, CONSTANTS.StartY, this.garethBob, null);\r\n        if (continueGame) {\r\n            newPlayer.hasRedKey = PLAYER.hasRedKey;\r\n            newPlayer.hasBlueKey = PLAYER.hasBlueKey;\r\n            newPlayer.hasGreenKey = PLAYER.hasGreenKey;\r\n        }\r\n        setPlayer(newPlayer);\r\n        this.win_game = false\r\n        this.load_level(\"Levels/mikeslevel.txt\");\r\n    }\r\n\r\n    clearScreen() {\r\n        this.ctx.fillStyle = \"#000000\";\r\n        this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    }\r\n\r\n    Game_Main() {\r\n        this.inputController.update();\r\n\r\n        if (INPUTCONTROLLER.KEY_PRESS==\"q\")\r\n        {\r\n            location.reload();\r\n        }\r\n        if (INPUTCONTROLLER.KEY_PRESS==\"Escape\")\r\n        {\r\n            this.stop_all_music();\r\n            this.gameState=CONSTANTS.GameState.GAME_INTRO;\r\n        }\r\n        if (this.gameState == CONSTANTS.GameState.GAME_INTRO)\r\n            this.game_intro();\r\n        \r\n        if (this.gameState == CONSTANTS.GameState.GAME_PAUSED)\r\n\t        this.game_paused();\r\n\r\n        if (this.gameState == CONSTANTS.GameState.GAME_HELP)\r\n            this.game_help();\r\n    \r\n        if (this.gameState == CONSTANTS.GameState.GAME_ABOUT)\r\n            this.game_about();\r\n            \r\n        if (this.gameState == CONSTANTS.GameState.GAME_RUNNING)\r\n            this.game_running();\r\n        \r\n        if (this.gameState == CONSTANTS.GameState.GAME_WIN)\r\n            this.game_win()\r\n\r\n        if (this.gameState == CONSTANTS.GameState.GAME_OVER)\r\n            this.game_over();\r\n\r\n        if (this.gameState == CONSTANTS.GameState.GAME_TEXT_BOX)\r\n            this.game_text_box();\r\n    }\r\n\r\n    game_running() {\r\n        this.clearScreen();\r\n\r\n        if (this.win_game && PLAYER.state==CONSTANTS.ThingState.FALLING && !PLAYER.alive)\r\n\t    {\r\n            this.gameState=CONSTANTS.GameState.GAME_WIN;\r\n            BOBAPI.DMusic_Play(6);\r\n            return;\r\n\t    }\r\n        if (!PLAYER.alive || PLAYER.health<=0)\r\n        {\r\n            this.gameState = CONSTANTS.GameState.GAME_OVER;\r\n            BOBAPI.DSound_Play(8);\r\n            return;\r\n        }\r\n\r\n        if (INPUTCONTROLLER.KEY_PRESS==\"p\")\r\n        {\r\n            this.gameState = CONSTANTS.GameState.GAME_PAUSED;\r\n        }\r\n\r\n        //HOWFIN'S UGLY CODE\r\n        // update tiles\r\n        for (let i = 0; i < this.currentLevel.width; i++)\r\n            for (let j = 0; j < this.currentLevel.height; j++)\r\n                this.currentLevel.tileObjects[i][j].update();\r\n        //HOWFIN'S UGLY CODE\r\n\r\n        //process player\r\n        PLAYER.update();\r\n        PLAYER.move();\r\n\r\n\r\n        //process enemies (TBA)\r\n        this.currentLevel.updateEnemies();\r\n        this.currentLevel.moveEnemies();\r\n\r\n        //process objects\r\n        this.currentLevel.updateObjects();\r\n        this.currentLevel.moveObjects();\r\n\r\n        //update objectlist\r\n        this.currentLevel.updateObjectList();\r\n        this.currentLevel.updateEnemyList();\r\n\r\n        //DRAWING PHASE\r\n        this.draw_tiles();\r\n        this.currentLevel.drawObjects();\r\n        this.currentLevel.drawEnemies();\r\n        PLAYER.draw();\r\n\r\n        \r\n        // lighting!!\r\n        //\toverlay_darkness_slow();\r\n        if (this.lights_on == false) {\r\n            BOBAPI.Draw_BOB16(ALL_BOBS.DarknessOverlay);\r\n        }\r\n        \r\n        // draw information elements\r\n        this.draw_lifebar();\r\n        \r\n        this.show_keys();\r\n        \r\n    }\r\n\r\n    draw_tiles() {\r\n        let tempX:number; \r\n        let tempY:number; \r\n        tempX = Math.floor((PLAYER.x - (PLAYER.x % 40))/40)-8;\r\n        tempY = Math.floor((PLAYER.y - (PLAYER.y % 40))/40)-6;\r\n\r\n        if (tempX<0)\r\n            tempX=0;\r\n        if (tempX>this.currentLevel.width-17)\r\n            tempX = this.currentLevel.width-17;\r\n        if (tempY<0)\r\n            tempY=0;\r\n        if (tempY>this.currentLevel.height-13)\r\n            tempY = this.currentLevel.height-13;\r\n\r\n        for (let i = tempX;i<tempX+17;i++)\r\n        {\r\n            for (let j = tempY;j<tempY+13;j++)\r\n            {\r\n                this.currentLevel.tileObjects[i][j].draw();\r\n            }\r\n        }\r\n    }\r\n\r\n    draw_all_tiles() {\r\n        for (var i = 0; i < this.currentLevel.width; i++) {\r\n            for (var j = 0; j < this.currentLevel.height; j++) {\r\n                this.currentLevel.tileObjects[i][j].draw();\r\n            }\r\n        }\r\n    }\r\n\r\n    //keep these names the same for ease of porting\r\n    show_text_box(text: string) {\r\n        BOBAPI.DSound_Play(3);\r\n        this.gameState = CONSTANTS.GameState.GAME_TEXT_BOX;\r\n        this.textBoxText = text;\r\n    }\r\n\r\n    show_keys()\r\n    {\r\n        ALL_BOBS.KeyOverlay.x = 500;\r\n        ALL_BOBS.KeyOverlay.y = 18;\r\n        BOBAPI.Draw_BOB16(ALL_BOBS.KeyOverlay);\r\n        if (PLAYER.hasRedKey)\r\n        {\r\n            ALL_BOBS.ObjectSet.curr_frame=0;\r\n            ALL_BOBS.ObjectSet.x = 533;\r\n            ALL_BOBS.ObjectSet.y = 11;\r\n            BOBAPI.Draw_BOB16(ALL_BOBS.ObjectSet);\r\n        }\r\n        if (PLAYER.hasGreenKey)\r\n        {\r\n            ALL_BOBS.ObjectSet.curr_frame=2;\r\n            ALL_BOBS.ObjectSet.x = 548;\r\n            ALL_BOBS.ObjectSet.y = 11;\r\n            BOBAPI.Draw_BOB16(ALL_BOBS.ObjectSet);\r\n        }\r\n        if (PLAYER.hasBlueKey)\r\n        {\r\n            ALL_BOBS.ObjectSet.curr_frame=1;\r\n            ALL_BOBS.ObjectSet.x = 563;\r\n            ALL_BOBS.ObjectSet.y = 11;\r\n            BOBAPI.Draw_BOB16(ALL_BOBS.ObjectSet);\r\n        }\r\n    }\r\n\r\n    set_lights(onOrOff: boolean) {\r\n        this.lights_on = onOrOff;\r\n    }\r\n\r\n    stop_all_music(){\r\n        BOBAPI.DMusic_Stop();\r\n    }\r\n\r\n    game_intro(){\r\n\r\n        if (INPUTCONTROLLER.Key_Start) {\r\n            this.newGame()\r\n\t\t    return;\r\n        } \r\n        if (INPUTCONTROLLER.KEY_PRESS==\"h\") {\r\n            this.gameState=CONSTANTS.GameState.GAME_HELP;\r\n        } \r\n        if (INPUTCONTROLLER.KEY_PRESS==\"a\") {\r\n            this.gameState=CONSTANTS.GameState.GAME_ABOUT;\r\n        } \r\n\r\n        ALL_BOBS.GameScreens.curr_frame=0;\r\n        BOBAPI.Draw_BOB16(ALL_BOBS.GameScreens);\r\n    }\r\n\r\n    game_about(){\r\n\r\n        ALL_BOBS.GameScreens.curr_frame=3;\r\n        BOBAPI.Draw_BOB16(ALL_BOBS.GameScreens);\r\n    }\r\n\r\n    game_help()\r\n    {\r\n        ALL_BOBS.GameScreens.curr_frame=4;\r\n        BOBAPI.Draw_BOB16(ALL_BOBS.GameScreens);\r\n    }\r\n\r\n    game_paused(){\r\n        if (INPUTCONTROLLER.Key_Start) {\r\n            this.gameState=CONSTANTS.GameState.GAME_RUNNING;\r\n\t\t    return;\r\n        } \r\n\r\n        ALL_BOBS.GameScreens.curr_frame=1;\r\n        BOBAPI.Draw_BOB16(ALL_BOBS.GameScreens);\r\n    }\r\n\r\n    game_win_game() {\r\n        this.win_game = true;\r\n        console.log(\"You win!!\");\r\n    }\r\n\r\n    game_over() {\r\n        ALL_BOBS.GameScreens.curr_frame=2;\r\n        BOBAPI.Draw_BOB16(ALL_BOBS.GameScreens);\r\n        \r\n        if (INPUTCONTROLLER.Key_Start) {\r\n            this.newGame(true);\r\n\t\t    return;\r\n        } \r\n    }\r\n\r\n    game_win() {\r\n        ALL_BOBS.GameScreens.curr_frame=5;\r\n        BOBAPI.Draw_BOB16(ALL_BOBS.GameScreens);\r\n        \r\n        if (INPUTCONTROLLER.Key_Start) {\r\n            this.newGame()\r\n\t\t    return;\r\n        } \r\n    }\r\n\r\n    game_text_box()\r\n    {\r\n        if (INPUTCONTROLLER.Key_Start) {\r\n            this.gameState = CONSTANTS.GameState.GAME_RUNNING;\r\n\t\t    return;\r\n        }\r\n\r\n        //DRAWING PHASE\r\n        this.draw_tiles();\r\n        this.currentLevel.drawObjects();\r\n        this.currentLevel.drawEnemies();\r\n        PLAYER.draw();\r\n        \r\n        if (this.lights_on == false) {\r\n            BOBAPI.Draw_BOB16(ALL_BOBS.DarknessOverlay);\r\n        }\r\n\r\n        // Draw a text box\r\n\r\n        var color = BOBAPI.RGB(255,255,255);\r\n        var textColor = BOBAPI.RGB(255, 255, 255);\r\n        var backColor = 'blue';\r\n        var x,y,width,height;\r\n        \r\n        x = 100;\r\n        y = 20;\r\n        width = CONSTANTS.ScreenWidth - 220;\r\n        height = 180;\r\n\r\n        var left = x+2;\r\n        var top = y+2;\r\n        var right = x + width-2;\r\n        var bottom = y + height-2;\r\n\r\n        let textHeight = 18;\r\n        let padding = 16;\r\n\r\n        // draw a rectangle\r\n\r\n        BOBAPI.Draw_Line16(x,y,x+width,y,color);\r\n        BOBAPI.Draw_Line16(x,y,x,y+height,color);\r\n        BOBAPI.Draw_Line16(x+width,y,x+width,y+height,color);\r\n        BOBAPI.Draw_Line16(x,y+height,x+width,y+height,color);\r\n\r\n        // draw transparent background\r\n        for (var i=x+1; i<x+width; i++){\r\n            for (var j=y+1; j<y+height; j++){\r\n                if ((i + j )%2==0)\r\n                    BOBAPI.Draw_Pixel16(i, j, backColor);\r\n            }\r\n        }\r\n        // draw the text\r\n        BOBAPI.DrawText(this.textBoxText, left + padding, top + padding , right - padding - left, textHeight, textColor);\r\n\r\n\t    BOBAPI.DrawText(\"Press Enter to continue\", left + 160, bottom - 4, right - padding - left, textHeight, \"black\"); \r\n\r\n    }\r\n\r\n    draw_lifebar()\r\n    {\r\n\t\tvar color = 'black';\r\n\t\tvar x,y,width,height;\r\n\t\tx = 100;\r\n\t\ty = 20;\r\n\t\twidth = 101;\r\n\t\theight = 21;\r\n\t\tBOBAPI.Draw_Line16(x,y,x+width,y,color);\r\n\t\tBOBAPI.Draw_Line16(x,y,x,y+height,color);\r\n\t\tBOBAPI.Draw_Line16(x+width,y,x+width,y+height,color);\r\n\t\tBOBAPI.Draw_Line16(x,y+height,x+width,y+height,color);\r\n\r\n\t\tALL_BOBS.LifeOverlay.x = 30;\r\n\t\tALL_BOBS.LifeOverlay.y = 17;\r\n\t\tBOBAPI.Draw_BOB16(ALL_BOBS.LifeOverlay);\r\n\t\tlet temp2 =  this.currentLevel.player.health;\r\n\t\tif (temp2>100)\r\n\t\t\ttemp2 = 100;\r\n\t\tfor (var i = 0;i<temp2;i++)\r\n\t\t{\r\n            color = BOBAPI.RGB(0,185+i/15,0);\r\n\t\t\tBOBAPI.Draw_Line16(x+1+i,y+1,x+1+i,y+height-1,color);\r\n\t\t}\r\n    }\r\n\r\n    // TODO: Change this to load a level by constant\r\n    load_level(levelFile: string) {\r\n        this.lights_on = true;\r\n        if (levelFile[7] == 'm' || levelFile[7] == 'M')\r\n            this.currentLevel = new Level(DATA.levels.MikeLevel, ALL_BOBS.MikeLevelTileSet,\r\n                ALL_BOBS.ObjectSet, CONSTANTS.NumObjects, PLAYER);\r\n        if (levelFile[7] == 'n' || levelFile[7] == 'N')\r\n            this.currentLevel = new Level(DATA.levels.NeilLevel, ALL_BOBS.NeilLevelTileSet,\r\n                ALL_BOBS.ObjectSet, CONSTANTS.NumObjects, PLAYER);\r\n        if (levelFile[7] == 'j' || levelFile[7] == 'J')\r\n            this.currentLevel = new Level(DATA.levels.Juanlevel, ALL_BOBS.JuanLevelTileSet,\r\n                ALL_BOBS.ObjectSet, CONSTANTS.NumObjects, PLAYER);\r\n\r\n        this.gameState = CONSTANTS.GameState.GAME_RUNNING;\r\n    }\r\n    \r\n    DEBUGMODE = false;\r\n    DEBUG1:any;\r\n    DEBUG2:any;\r\n    DEBUG3:any;\r\n    DEBUG4:any;\r\n\r\n}"]}