{"version":3,"sources":["game/gameobject.ts"],"names":[],"mappings":"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","file":"gameobject.js","sourceRoot":"..","sourcesContent":["import { Level } from \"./level\";\r\nimport { BOB, BOBAPI } from \"./bob\";\r\nimport { Thing } from \"./thing\";\r\nimport { CONSTANTS } from \"./data\";\r\n\r\n//port of Object.cpp, can't use Object because name is used in JavaScript\r\nexport class GameObject extends Thing {\r\n\r\n    objectType: number;//what it is\r\n    objectID: number;//it's tilemap ID. used for knowing which picture to load.\r\n\r\n    constructor(xt: number, yt: number, objID: number, bob: BOB, l: Level) {\r\n        super(xt, yt, bob, l);\r\n        this.type_id = CONSTANTS.GameType.OBJECT;\r\n        this.objectID = objID;\r\n\r\n        if (0 <= this.objectID && this.objectID <= 2) {\r\n            this.currentFrame = objID;\r\n            if (this.objectID == 0)\r\n                this.objectType = CONSTANTS.ObjectType.REDKEY;\r\n            if (this.objectID == 1)\r\n                this.objectType = CONSTANTS.ObjectType.BLUEKEY;\r\n            if (this.objectID == 2)\r\n                this.objectType = CONSTANTS.ObjectType.GREENKEY;\r\n            this.height = 15;\r\n            this.width = 7;\r\n            this.speed = 0;\r\n            this.x = this.x + 18;\r\n            this.y = this.y + 14;\r\n        }\r\n\r\n        if (3 <= this.objectID && this.objectID <= 6) {\r\n            this.currentFrame = objID;\r\n            this.objectType = CONSTANTS.ObjectType.GREENDOOR;\r\n            this.height = 40;\r\n            this.width = 40;\r\n        }\r\n        if (7 <= this.objectID && this.objectID <= 10) {\r\n            this.currentFrame = objID;\r\n            this.objectType = CONSTANTS.ObjectType.BLUEDOOR;\r\n            this.height = 40;\r\n            this.width = 40;\r\n        }\r\n        if (11 <= this.objectID && this.objectID <= 14) {\r\n            this.currentFrame = objID;\r\n            this.objectType = CONSTANTS.ObjectType.REDDOOR;\r\n            this.height = 40;\r\n            this.width = 40;\r\n        }\r\n\r\n    }\r\n\r\n    draw() {\r\n        this.processAnimation();\r\n        this.defaultDraw();\r\n    }\r\n\r\n    update() {\r\n\r\n        //reset vectors\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.velocity = this.speed;\r\n        this.getComponents();\r\n\r\n    }\r\n\r\n    move() {\r\n\r\n        this.x = this.x + this.vx;\r\n\r\n        this.movingX = true;\r\n        //checkCorners(TILE);\r\n        this.movingX = false;\r\n\r\n        this.y = this.y + this.vy;\r\n\r\n        this.movingY = true;\r\n        //checkCorners(TILE);\r\n        this.movingY = false;\r\n\r\n    }\r\n\r\n    //figure out what frame of animation to use, and set it to currentFrame.\r\n    processAnimation() {\r\n        if (0 <= this.objectID && this.objectID <= 2) {\r\n            this.currentFrame = this.objectID;\r\n            this.bob.x = this.x - 18;\r\n            this.bob.y = this.y - 14;\r\n        }\r\n        if (3 <= this.objectID && this.objectID <= 14) {\r\n            this.currentFrame = this.objectID;\r\n            this.bob.x = this.x;\r\n            this.bob.y = this.y;\r\n        }\r\n        this.bob.curr_frame = this.currentFrame;\r\n    }\r\n\r\n    checkCorners(thing: number) {\r\n        if (this.x <= 0 || this.y <= 0 || this.x + this.width - 1 >=\r\n            this.currentLevel.width * 40 || this.y + this.height - 1 >= this.currentLevel.height * 40)\r\n            return;\r\n        if (thing == CONSTANTS.GameType.TILE) {\r\n            //if checkCollision returned true, run both handleCollisions\r\n            if (this.checkCollision(this.currentLevel.getTileObject(this.x, this.y)) > 0) {\r\n                this.currentLevel.getTileObject(this.x, this.y).handleCollision(this);\r\n                this.handleCollision(this.currentLevel.getTileObject(this.x, this.y));\r\n            }\r\n            if (this.checkCollision(this.currentLevel.getTileObject(this.x + this.width - 1, this.y)) > 0) {\r\n                this.currentLevel.getTileObject(this.x + this.width - 1, this.y).handleCollision(this);\r\n                this.handleCollision(this.currentLevel.getTileObject(this.x + this.width - 1, this.y));\r\n            }\r\n            if (this.checkCollision(this.currentLevel.getTileObject(this.x + this.width - 1, this.y + this.height - 1)) > 0) {\r\n                this.currentLevel.getTileObject(this.x + this.width - 1, this.y + this.height - 1).handleCollision(this);\r\n                this.handleCollision(this.currentLevel.getTileObject(this.x + this.width - 1, this.y + this.height - 1));\r\n            }\r\n            if (this.checkCollision(this.currentLevel.getTileObject(this.x, this.y + this.height - 1)) > 0) {\r\n                this.currentLevel.getTileObject(this.x, this.y + this.height - 1).handleCollision(this);\r\n                this.handleCollision(this.currentLevel.getTileObject(this.x, this.y + this.height - 1));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleCollision(thing: Thing) {\r\n        if (thing.type_id == CONSTANTS.GameType.PLAYER) {\r\n            if (this.objectType == CONSTANTS.ObjectType.REDKEY || this.objectType == CONSTANTS.ObjectType.BLUEKEY\r\n                || this.objectType == CONSTANTS.ObjectType.GREENKEY) {\r\n                this.alive = false;\r\n                if (this.objectType == CONSTANTS.ObjectType.REDKEY)\r\n                    this.currentLevel.player.hasRedKey = true;\r\n                if (this.objectType == CONSTANTS.ObjectType.GREENKEY)\r\n                    this.currentLevel.player.hasGreenKey = true;\r\n                if (this.objectType == CONSTANTS.ObjectType.BLUEKEY)\r\n                    this.currentLevel.player.hasBlueKey = true;\r\n                BOBAPI.DSound_Play(11);\r\n            }\r\n            if (this.objectType == CONSTANTS.ObjectType.REDDOOR || this.objectType == CONSTANTS.ObjectType.GREENDOOR\r\n                || this.objectType == CONSTANTS.ObjectType.BLUEDOOR) {\r\n\r\n                if (this.objectType == CONSTANTS.ObjectType.REDDOOR) {\r\n                    if (this.currentLevel.player.hasRedKey) {\r\n                        this.alive = false;\r\n                        BOBAPI.DSound_Play(6);\r\n                    }\r\n                }\r\n                if (this.objectType == CONSTANTS.ObjectType.BLUEDOOR) {\r\n                    if (this.currentLevel.player.hasBlueKey) {\r\n                        this.alive = false;\r\n                        BOBAPI.DSound_Play(6);\r\n                    }\r\n                }\r\n                if (this.objectType == CONSTANTS.ObjectType.GREENDOOR) {\r\n                    if (this.currentLevel.player.hasGreenKey) {\r\n                        this.alive = false;\r\n                        BOBAPI.DSound_Play(6);\r\n                    }\r\n                }\r\n\r\n                if (thing.movingX) {\r\n                    this.moveToEdgeX(thing, this);\r\n                }\r\n                else {\r\n                    this.moveToEdgeY(thing, this);\r\n                }\r\n            }\r\n        }\r\n        this.defaultHandleCollision(thing);\r\n    }\r\n\r\n    defaultHandleCollision(thing: Thing) {\r\n\r\n    }\r\n}"]}